# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11
        environment:
          ISTIO: /go/src/istio.io/
          ADAPTER_CODE: /go/src/github.com/3scale/istio-integration/3scaleAdapter

    working_directory: /go/src/github.com/3scale/istio-integration/
    steps:
      - checkout

      - restore_cache:
          keys:
            - mixer-binaries

      - run: echo 'export PATH=/go/out/linux_amd64/release/:$PATH' >> $BASH_ENV

      - run:
          name: Download Istio
          command: |
            mkdir -p $ISTIO
            git clone https://github.com/istio/istio $ISTIO/istio

      - run:
          name: Compile Mixer server and client
          command: |
            if command -v mixs && command -v mixc; then
              echo "mixc and mixs already available"
            else
              cd ${ISTIO}/istio
              make mixs && make mixc
            fi

      - save_cache:
          key: mixer-binaries
          paths:
            - "/go/out/linux_amd64/release/"

      - restore_cache:
          keys:
            - deps-vendor

      - run:
          name: Download 3scale Istio Adapter dependencies
          command: |
            cd ${ADAPTER_CODE}
            dep ensure -v

      - save_cache:
          key: deps-vendor
          paths:
            - "/go/src/github.com/3scale/istio-integration/3scaleAdapter/vendor"

      - run:
          name: Golang tests
          command: |
            cd ${ADAPTER_CODE}
            make unit

      - run:
          name: Build 3scale Istio Adapter with test coverage
          command: |
            cd ${ADAPTER_CODE}
            make build_test_adapter

      - run:
          name: Start 3scale Istio Adapter
          command: |
            cd ${ADAPTER_CODE}
            ./_output/3scale-adapter-integration-bin -test.coverprofile="$(pwd)/_output/integration.cov"
          background: true

      - run:
          name: Wait for adapter to become ready
          command: |
            dockerize -wait tcp://0.0.0.0:3333 -timeout 1m

      - run:
          name: Start Mixer Server
          command: |
            mixs server --configStoreURL=fs:///go/src/github.com/3scale/istio-integration/3scaleAdapter/testdata
          background: true

      - run:
          name: Wait for Mixer Server to become ready
          command: |
            dockerize -wait tcp://0.0.0.0:9091 -timeout 1m

      - run:
          name: Run Integration test scripts
          command: |
            cd ${ADAPTER_CODE}
            make integration START_DEPENDENCIES=No

      - run:
          name: Gracefully terminate adapter and generate coverage report
          command: |
            kill  $(ps -ef | grep mixs | grep -v grep | awk '{print $2}')
            kill -SIGTERM $(ps -ef | grep adapter | grep -v grep | awk '{print $2}')
            sleep 5

      - run:
          name: Merge coverage profiles and pipe to Codecov
          command: |
            cd ${ADAPTER_CODE}
            go get github.com/wadey/gocovmerge
            gocovmerge _output/integration.cov _output/unit.cov > coverage.txt
            bash <(curl -s https://codecov.io/bash)

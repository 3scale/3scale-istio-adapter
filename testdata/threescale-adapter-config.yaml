# handler for adapter threescale
apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
  name: threescale-123456
  namespace: istio-system
  labels:
    "service-mesh.3scale.net/host": "127.0.0.1"
    "service-mesh.3scale.net/service-id": "123456"
spec:
  adapter: threescale
  params:
    service_id: "123456"
    system_url: "http://127.0.0.1:8090"
    access_token: "secret-token"
  connection:
    address: "[::]:3333"
---
# instance for template authorization
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: threescale-authorization-123456
  namespace: istio-system
  labels:
    "service-mesh.3scale.net/host": "127.0.0.1"
    "service-mesh.3scale.net/service-id": "123456"
spec:
  template: authorization
  params:
    subject:
      user: request.query_params["user_key"] | request.headers["User-Key"] | ""
      properties:
        app_id: request.query_params["app_id"] | request.headers["App-Id"] | ""
        app_key: request.query_params["app_key"] | request.headers["App-Key"] | ""
    action:
      path: request.url_path
      method: request.method | "get"
---
# rule to dispatch to handler threescale.handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: threescale-123456
  namespace: istio-system
  labels:
    "service-mesh.3scale.net/host": "127.0.0.1"
    "service-mesh.3scale.net/service-id": "123456"
spec:
  match: destination.labels["service-mesh.3scale.net"] == "true" && destination.labels["service-mesh.3scale.net/uid"] == "123456"
  actions:
  - handler: threescale-123456.handler.istio-system
    instances:
    - threescale-authorization-123456
---
